@using HCMIS.SHARED.Models

<div class="alert-info" style="padding-left: 10px; padding-right: 10px; padding-top: 10px; padding-bottom:-10px;">
    <p>
        @if (EmployeeLeaveRoasterData != null)
        {
            var _EmployeeLeaveRoasterData = EmployeeLeaveRoasterData.Select(o => new { o.EmployeeId, o.EmployeeDetails, o.DepartmentId, o.DepartmentDescription }).Distinct().ToList();

            <div class="row" style="margin-bottom: -10px;">

                @if (DepartmentData != null)
                {
                    @foreach (var n in DepartmentData)
                    {
                        <div class="col-md-2">
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="NotImplemented" style="border-radius:50%; height:50px;width:50px; margin-left:auto; margin-right:auto; background-color:@n.ColorCode;"></div>
                                </div>
                                <div class="col-md-12">
                                    <p style="text-align:center;margin-bottom:10px"><strong style="text-align:center;">@n.DepartmentDescription</strong></p>
                                    @{
                                        var status = _EmployeeLeaveRoasterData.Where(o => o.DepartmentId == n.DepartmentId).Count();
                                    }
                                    <p style="text-align:center;margin-bottom:10px">@status</p>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        }

    </p>
</div>


@code {
    [Parameter]
    public List<ADepartment>? DepartmentData { get; set; }
    [Parameter]
    public List<ViewEmployeeLeaveRoster>? EmployeeLeaveRoasterData { get; set; }
    List<ViewEmployeeLeaveRoster>? datasource { get; set; }


    protected override async Task OnInitializedAsync()
    {
        datasource = new List<ViewEmployeeLeaveRoster>();
        if (EmployeeLeaveRoasterData != null && EmployeeLeaveRoasterData.Count() > 0)
        {
            datasource.AddRange(EmployeeLeaveRoasterData);
        }
    }
}
