@using HCMIS.SHARED.Models;
@*<h3>SkillsPartialPage</h3>*@

<div class="row">
    <div class="col-lg-12 control-section">
        <SfToast @ref="ToastObj" ID="toast_type">
            <ToastPosition X="@ToastPosition"></ToastPosition>
        </SfToast>
    </div>
</div>
@if (OndataLoad == true){
    if (SkillsData != null && SkillsData.Count > 0){
        <table class="table table-bordered">
            <tr><th><label>Skill</label></th><th><label>Skill Level</label></th><th><label>Years of Experience</label></th></tr>
            @foreach (var item in SkillsData)
            {
                <tr>
                    <td><p>@item.SkillDescription</p></td>
                    <td>
                        @if (SkillLevelData != null)
                        {
                            var a = SkillLevelData.FirstOrDefault(o => o.SkillLevelId == item.SkillLevelId);
                            if (a != null)
                            {
                                <p>@a.SkillLevelDesc</p>
                            }
                        }
                    </td>
                    <td><p>@item.YearsofExperience</p></td>
                </tr>
            }
        </table>
    }
    else
    {
        <p class="alert-info">There is no data to display</p>
    }
}
else
{
    <div class="col-md-12">
        <div class="loader">
            <div class="loader--dot"></div>
            <div class="loader--dot"></div>
            <div class="loader--dot"></div>
            <div class="loader--dot"></div>
            <div class="loader--dot"></div>
            <div class="loader--dot"></div>
            <div class="loader--text"></div>
        </div>
    </div>
}

@code {
    #region Toasters
    public static string? ToastContent { get; set; }
    SfToast? ToastObj;
    SfToast? DeleteToastObj;
    private string ToastPosition = "Right";
    private int AlarmTimeout { get; set; } = 120000;
    private List<ToastModel> Toast = new List<ToastModel>
        {
            new ToastModel{ Title = "Warning!", Content=ToastContent, CssClass="e-toast-warning", Icon="e-warning toast-icons" },
            new ToastModel{ Title = "Success!", Content=ToastContent, CssClass="e-toast-success", Icon="e-success toast-icons" },
            new ToastModel{ Title = "Error!", Content=ToastContent, CssClass="e-toast-danger", Icon="e-error toast-icons" },
            new ToastModel{ Title = "Information!", Content=ToastContent, CssClass="e-toast-info", Icon="e-info toast-icons" }
        };
    #endregion Toasters
    [Parameter]
    public string? AccessToken { get; set; }
    [Parameter]
    public List<NonStaffSkills>? SkillsData { get; set; }
    [Parameter]
    public List<ASkillLevel>? SkillLevelData { get; set; }
    private bool OndataLoad { get; set; } = false;
    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        OndataLoad = true;
    }
}
