@using HCMIS.DTOs;
@*<h3>ApplicantHeaderPartialPage</h3>*@

@{
    var _jobopening = JobOpeningData.FirstOrDefault(o => o.JobOpeningId == HeaderReviewData.JobOpeningId);
    var _jobdesc = JobDescriptionData.FirstOrDefault(o => o.JobDescriptionId == _jobopening.JobDescriptionId);
    var _jobtitle = JobTitleData.FirstOrDefault(o => o.JobTitleId == _jobdesc.JibTitleId);
    var _dept = DepartmentData.FirstOrDefault(o => o.DepartmentId == _jobdesc.DepartmentId);
    var _jobtype = JobTypeData.FirstOrDefault(o => o.JobTypeId == _jobdesc.JobTypeId);
    var _salarysacle = SalaryScaleData.FirstOrDefault(o => o.SalaryScaleId == _jobdesc.SalaryScaleId);
    var _leveleducation = LevelofEducationData.FirstOrDefault(o => o.LevelofEducationId == _jobdesc.MinimumLevelOfEducationId);
        
    <div class="col-md-12">
        <h3>Job Description</h3>
    </div>
    <div class="col-md-4">
        <label>Reference No</label>
        @if (_jobopening != null &&!string.IsNullOrEmpty(_jobopening.ReferenceNumber))
        {
            <p>@_jobopening.ReferenceNumber</p>
        }
        
    </div>
    <div class="col-md-4">
        <label>Department</label>
        @if (_dept != null && !string.IsNullOrEmpty(_dept.DepartmentDescription))
        {
            <p>@_dept.DepartmentDescription</p>
        }
        
    </div>
    <div class="col-md-4">
        <label>Job Title</label>
        @if (_jobtitle != null && !string.IsNullOrEmpty(_jobtitle.JobTitleDescription))
        {
            <p>@_jobtitle.JobTitleDescription</p>
        }
        
    </div>
    <div class="col-md-12">
        <label>Job Description</label>
        @if(_jobdesc != null && !string.IsNullOrEmpty(_jobdesc.JobDescription1))
        {
            @((MarkupString)@_jobdesc.JobDescription1)
        }        
    </div>
    <div class="col-md-4">
        <label>Salary Scale</label>
        @if (_jobdesc.SalaryScaleId != null)
        {
            <p>@_salarysacle.SalaryScaleDescription</p>
        }        
    </div>
    <div class="col-md-4">
        <label>Job Type</label>
        @if (_jobtype != null && _jobdesc.JobTypeId != null)
        {
            <p>@_jobtype.TypeDescription</p>
        }        
    </div>
    @if (_jobdesc.JobTypeId != null && _jobdesc.JobTypeId == 3)
    {
        var _contractlengthtype = ContractLengthTypeData.FirstOrDefault(o => o.ContractLengthTypeId == _jobdesc.ContractLengthTypeId);
        
        <div class="col-md-4">
            <label>Contract Length</label>
            @if (_jobdesc != null && _contractlengthtype != null)
            {
                <p>@_jobdesc.ContractLength @_contractlengthtype.ContractLengthTypeDesc</p>
            }            
        </div>
        <div class="col-md-4">
            <label>Contract Start Date</label>
            @if (_jobdesc != null && _jobdesc.ContractStartDate.HasValue)
            {
                <p>@_jobdesc.ContractStartDate.Value.ToString("dd/MM/yyyy")</p>
            }
        </div>
        <div class="col-md-4">
            <label>Contract End Date</label>
            @if (_jobdesc != null && _jobdesc.ContractEnddate.HasValue)
            {
                <p>@_jobdesc.ContractEnddate.Value.ToString("dd/MM/yyyy")</p>
            }
        </div>
    } 
    <div class="col-md-4">
        <label>No of Vacancies</label>
        @if (_jobdesc != null && _jobdesc.Vacancies != null)
        {
            <p>@_jobdesc.Vacancies</p>
        }
        
    </div>
    <div class="col-md-4">
        <label>Minimum Level of Education</label>
        @if (_leveleducation != null && !string.IsNullOrEmpty(_leveleducation.LevelofEducationDesc))
        {
            <p>@_leveleducation.LevelofEducationDesc</p>
        }        
    </div>
    <div class="col-md-4">
        <label>Minimum Years of Experience</label>
        @if (_jobdesc != null && _jobdesc.MinimumYearsofExperience != null)
        {
            <p>@_jobdesc.MinimumYearsofExperience</p>
        }
        
    </div>
    <div class="col-md-12">
        <h3>Applicant's Details</h3>
    </div>

    ApplicantDetails _detail = new ApplicantDetails();

    var _district = DistrictData.ToList();
    var _parish = ParishData.ToList();
    var _subcounty = SubCountyData.ToList();
    var _village = VillageData.ToList();

    //Employee
    if (HeaderReviewData != null && HeaderReviewData.Employeeid != null && HeaderReviewData.NonStaffid == null)
    {
        if (EmployeeData != null)
        {
            var _employeedetail = EmployeeData.FirstOrDefault(o => o.Employeeid == HeaderReviewData.Employeeid);

            var origindistrictdesc = _district.FirstOrDefault(o=>o.DistrictId == _employeedetail.PlaceofOriginDistrictId);
            var residencedistrictdesc = _district.FirstOrDefault(o=>o.DistrictId == _employeedetail.PlaceofResidenceDistrictId);

            var originsubcountydesc = _subcounty.FirstOrDefault(o => o.SubCountyId == _employeedetail.PlaceofOriginSubCountyId);
            var residencesubcountydesc = _subcounty.FirstOrDefault(o => o.SubCountyId == _employeedetail.PlaceofResidenceSubCountyId);

            var originparishdesc = _parish.FirstOrDefault(o => o.ParishId == _employeedetail.PlaceofOriginParishId);
            var residenceparishdesc = _parish.FirstOrDefault(o => o.ParishId == _employeedetail.PlaceofResidenceParishId);

            var originvillagedesc = _village.FirstOrDefault(o => o.VillageId == _employeedetail.PlaceofOriginVillageId);
            var residencevillageesc = _village.FirstOrDefault(o => o.VillageId == _employeedetail.PlaceofResidenceVillageId);


            _detail.FullName = _employeedetail.EmployeeDetails;
            _detail.GenderDesc = _employeedetail.GenderDesc;
            _detail.EmailAddress = _employeedetail.EmailAddress;
            
            //Origin
            if (origindistrictdesc != null && !string.IsNullOrEmpty(origindistrictdesc.DistrictDescription))
            {
                _detail.PlaceofOriginDistrictDesc = origindistrictdesc.DistrictDescription;

            }

            if (originsubcountydesc != null && !string.IsNullOrEmpty(originsubcountydesc.SubCountyDescription))
            {
                _detail.PlaceofOriginSubcountyDesc = originsubcountydesc.SubCountyDescription;

            }

            if (originparishdesc != null && !string.IsNullOrEmpty(originparishdesc.ParishDesc))
            {
                _detail.PlaceofOriginParishDesc = originparishdesc.ParishDesc;

            }

            if (originvillagedesc != null && !string.IsNullOrEmpty(originvillagedesc.ViallgeDescription))
            {
                _detail.PlaceofOriginVillageDesc = originvillagedesc.ViallgeDescription;

            }

            //Residence

            if (residencedistrictdesc != null && !string.IsNullOrEmpty(residencedistrictdesc.DistrictDescription))
            {
                _detail.PlaceofResidenceDistrictDesc = residencedistrictdesc.DistrictDescription;
            }

            if (residencesubcountydesc != null && !string.IsNullOrEmpty(residencesubcountydesc.SubCountyDescription))
            {
                _detail.PlaceofResidenceSubcountyDesc = residencesubcountydesc.SubCountyDescription;
            }

            if (residenceparishdesc != null && !string.IsNullOrEmpty(residenceparishdesc.ParishDesc))
            {
                _detail.PlaceofResidenceParishDesc = residenceparishdesc.ParishDesc;

            }

            if (residencevillageesc != null && !string.IsNullOrEmpty(residencevillageesc.ViallgeDescription))
            {
                _detail.PlaceofResidenceVillageDesc = residencevillageesc.ViallgeDescription;

            }

            _detail.IdentificationNumber = _employeedetail.IdentificationNumber;
            _detail.IdentificationTypeDesc = _employeedetail.IdentificationTypeDesc;
            _detail.MaritalStatusDescription = _employeedetail.MaritalStatusDescription;
            _detail.OfficialPhoneNumber = _employeedetail.CountryCode + " " + _employeedetail.OfficialPhoneNumber;
            _detail.MobileNumber = _employeedetail.OtherCountryCode + " " + _employeedetail.MobileNumber;
            _detail.NationalityDesc = _employeedetail.NationalityDesc;

            if (_employeedetail.DoB.HasValue)
            {
                _detail.DoB = _employeedetail.DoB.Value;
            }
        }
    }

    //Non Staff
    else if (HeaderReviewData != null && HeaderReviewData.NonStaffid != null && HeaderReviewData.Employeeid == null)
    {
        if (NonStaffData != null)
        {
            var _nonstaffdetail = NonStaffData.FirstOrDefault(o => o.NonStaffid == HeaderReviewData.NonStaffid);

            var origindistrictdesc = _district.FirstOrDefault(o=>o.DistrictId == _nonstaffdetail.PlaceofOriginDistrictId);
            var residencedistrictdesc = _district.FirstOrDefault(o=>o.DistrictId == _nonstaffdetail.PlaceofResidenceDistrictId);

            var originsubcountydesc = _subcounty.FirstOrDefault(o => o.SubCountyId == _nonstaffdetail.PlaceofOriginSubCountyId);
            var residencesubcountydesc = _subcounty.FirstOrDefault(o => o.SubCountyId == _nonstaffdetail.PlaceofResidenceSubCountyId);

            var originparishdesc = _parish.FirstOrDefault(o => o.ParishId == _nonstaffdetail.PlaceofOriginParishId);
            var residenceparishdesc = _parish.FirstOrDefault(o => o.ParishId == _nonstaffdetail.PlaceofResidenceParishId);

            var originvillagedesc = _village.FirstOrDefault(o => o.VillageId == _nonstaffdetail.PlaceofOriginVillageId);
            var residencevillageesc = _village.FirstOrDefault(o => o.VillageId == _nonstaffdetail.PlaceofResidenceVillageId);


            _detail.FullName = _nonstaffdetail.FullName;
            _detail.GenderDesc = _nonstaffdetail.GenderDesc;
            _detail.EmailAddress = _nonstaffdetail.EmailAddress;

            //Origin
            if(origindistrictdesc != null && !string.IsNullOrEmpty(origindistrictdesc.DistrictDescription))
            {
                _detail.PlaceofOriginDistrictDesc = origindistrictdesc.DistrictDescription;
                
            }

            if (originsubcountydesc != null && !string.IsNullOrEmpty(originsubcountydesc.SubCountyDescription))
            {
                 _detail.PlaceofOriginSubcountyDesc = originsubcountydesc.SubCountyDescription;
                
            }

            if (originparishdesc != null && !string.IsNullOrEmpty(originparishdesc.ParishDesc))
            {
                _detail.PlaceofOriginParishDesc = originparishdesc.ParishDesc;
                
            }

            if (originvillagedesc != null && !string.IsNullOrEmpty(originvillagedesc.ViallgeDescription))
            {
                _detail.PlaceofOriginVillageDesc = originvillagedesc.ViallgeDescription;

            }

            //Residence

            if (residencedistrictdesc != null && !string.IsNullOrEmpty(residencedistrictdesc.DistrictDescription))
            {
                _detail.PlaceofResidenceDistrictDesc = residencedistrictdesc.DistrictDescription;                
            }

            if (residencesubcountydesc != null && !string.IsNullOrEmpty(residencesubcountydesc.SubCountyDescription))
            {
                 _detail.PlaceofResidenceSubcountyDesc = residencesubcountydesc.SubCountyDescription;                
            }

            if (residenceparishdesc != null && !string.IsNullOrEmpty(residenceparishdesc.ParishDesc))
            {
                _detail.PlaceofResidenceParishDesc = residenceparishdesc.ParishDesc;
                
            }

            if (residencevillageesc != null && !string.IsNullOrEmpty(residencevillageesc.ViallgeDescription))
            {
                _detail.PlaceofResidenceVillageDesc = residencevillageesc.ViallgeDescription;

            }

            _detail.IdentificationNumber = _nonstaffdetail.IdentificationNumber;
            _detail.IdentificationTypeDesc = _nonstaffdetail.IdentificationTypeDesc;
            _detail.MaritalStatusDescription = _nonstaffdetail.MaritalStatusDescription;
            _detail.OfficialPhoneNumber = _nonstaffdetail.CountryCode +" "+ _nonstaffdetail.OfficialPhoneNumber;
            _detail.MobileNumber = _nonstaffdetail.OtherCountryCode + " " + _nonstaffdetail.MobileNumber;
            _detail.NationalityDesc = _nonstaffdetail.NationalityDesc;

            if (_nonstaffdetail.DoB.HasValue)
            {
                _detail.DoB = _nonstaffdetail.DoB.Value;
            }

        }
    }

    if (_detail != null)
    {
        <div class="col-md-4">
            <label>Name</label>
            <p>@_detail.FullName</p>
        </div>
        <div class="col-md-4">
            <label>Gender</label>
            <p>@_detail.GenderDesc</p>
        </div>
        <div class="col-md-4">
            <label>Nationality</label>
            <p>@_detail.NationalityDesc</p>
        </div>
        <div class="col-md-4">
            <label>Date of birth</label>
            @if (_detail.DoB.HasValue)
            {
                <p>@_detail.DoB.Value.ToString("dd/MM/yyyy")</p>
            }
        </div>
        <div class="col-md-4">
            <label>Marital Status</label>
            <p>@_detail.MaritalStatusDescription</p>
        </div>
        <div class="col-md-4">
            <label>Official Email</label>
            <p>@_detail.EmailAddress</p> 
        </div>
        <div class="col-md-4">
            <label>Identification Type</label>
            <p>@_detail.IdentificationTypeDesc</p>
        </div>
        <div class="col-md-4">
            <label>Identification Number</label>
            <p>@_detail.IdentificationNumber</p>
        </div>
        <div class="col-md-4">
            <label>Mobile Number</label>
            <p>@_detail.OfficialPhoneNumber</p>
        </div>
        <div class="col-md-4">
            <label>Other Mobile Number</label>
            <p>@_detail.MobileNumber</p>
        </div>
        
        <div class="col-md-12">
            <h4>Place of Origin</h4>
        </div>

        <div class="col-md-3">
            <p>District</p>
            <p>@_detail.PlaceofOriginDistrictDesc</p>
        </div>
        <div class="col-md-3">
            <label>Sub county</label>
            <p>@_detail.PlaceofOriginSubcountyDesc</p>
        </div>
        <div class="col-md-3">
            <label>Parish</label>
            <p>@_detail.PlaceofOriginParishDesc</p>
        </div>
        <div class="col-md-3">
            <label>Village</label>
            <p>@_detail.PlaceofOriginVillageDesc</p>
        </div>
        <div class="col-md-12">
            <h4>Place of Residence</h4>
        </div>
        <div class="col-md-3">
            <label>District</label>
            <p>@_detail.PlaceofResidenceDistrictDesc</p> 
        </div>
        <div class="col-md-3">
            <label>Sub county</label>
            <p>@_detail.PlaceofResidenceSubcountyDesc</p>
        </div>
        <div class="col-md-3">
            <label>Parish</label>
            <p>@_detail.PlaceofResidenceParishDesc</p> 
        </div>
        <div class="col-md-3">
            <label>Village</label>
            <p>@_detail.PlaceofResidenceVillageDesc</p>
        </div>
    }

    @if (ShowAptituddeTestResults == true)
    {
        <div class="col-md-12">
            <h4>Aptitudde Test Results</h4>
        </div>
        <div class="col-md-4">
            <label>Passmark</label>
            @if (HeaderReviewData.AptituddeTestPassMark.HasValue)
            {
                <p>@HeaderReviewData.AptituddeTestPassMark.Value.ToString("N1")</p>
            }

        </div>
        <div class="col-md-4">
            <label>Test Results</label>
            @if (HeaderReviewData.AptituddeTestApplicantScore.HasValue)
            {
                <p>@HeaderReviewData.AptituddeTestApplicantScore.Value.ToString("N1")</p>
            }
        </div>
    }
}

@code {
    [Parameter]
    public AppliedForJobs? HeaderReviewData { get; set; }
    [Parameter]
    public bool ShowAptituddeTestResults { get; set; }
    [Parameter]
    public List<ViewJobDescOpening2024>? JobOpeningData { get; set; }
    [Parameter]
    public List<JobDescription>? JobDescriptionData { get; set; }
    [Parameter]
    public List<AJobType>? JobTypeData { get; set; }
    [Parameter]
    public List<AJobTitle>? JobTitleData { get; set; }
    [Parameter]
    public List<ADepartment>? DepartmentData { get; set; }
    [Parameter]
    public List<ASalaryScale>? SalaryScaleData { get; set; }
    [Parameter]
    public List<AContractLengthType>? ContractLengthTypeData { get; set; }
    [Parameter]
    public List<ALevelofEducation>? LevelofEducationData { get; set; }
    [Parameter]
    public List<ViewEmployeeDropDown>? EmployeeData { get; set; }

    [Parameter]
    public List<ViewNonStaffDropDown>? NonStaffData { get; set; }

    [Parameter]
    public List<ADistrict>? DistrictData { get; set; }

    [Parameter]
    public List<ViewAparish>? ParishData { get; set; }

    [Parameter]
    public List<ASubCounty>? SubCountyData { get; set; }

    [Parameter]
    public List<ViewAvillage>? VillageData { get; set; }


    public class ApplicantDetails
    {
        public string FullName { get; set; }

        public string? GenderDesc { get; set; }

        public string? EmailAddress { get; set; }

        public string? PlaceofOriginDistrictDesc { get; set; }

        public string? PlaceofOriginSubcountyDesc { get; set; }

        public string? PlaceofOriginParishDesc { get; set; }

        public string? PlaceofOriginVillageDesc { get; set; }

        public string? PlaceofResidenceDistrictDesc { get; set; }

        public string? PlaceofResidenceSubcountyDesc { get; set; }

        public string? PlaceofResidenceParishDesc { get; set; }

        public string? PlaceofResidenceVillageDesc { get; set; }

        public string? IdentificationTypeDesc { get; set; }

        public string? MaritalStatusDescription { get; set; }

        public string? OfficialPhoneNumber { get; set; }

        public string? MobileNumber { get; set; }

        public string? NationalityDesc { get; set; }

        public DateTime? DoB { get; set; }

        public string? IdentificationNumber { get; set; }
    }
    
}
