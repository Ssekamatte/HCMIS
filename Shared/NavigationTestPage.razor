@page "/NavigationTestPage"



@using Syncfusion.Blazor.Grids
@using Syncfusion.Blazor.Buttons


<SfButton @onclick="Add">Add</SfButton>
<SfButton @onclick="Delete">Delete</SfButton>
<SfButton @onclick="Save" Disabled="Disabled">Update</SfButton>

<SfGrid @ref="Grid" DataSource="@Orders" AllowPaging="true"
        Height="315">
    <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true" Mode="EditMode.Batch"></GridEditSettings>
    <GridEvents OnBatchAdd="BatchAddHandler" OnBatchDelete="BatchDeleteHandler" OnCellSave="CellSaveHandler" TValue="Order"></GridEvents>
    <GridColumns>
        <GridColumn Field=@nameof(Order.OrderID) HeaderText="Order ID" IsPrimaryKey="true" TextAlign="TextAlign.Right" ValidationRules="@(new ValidationRules { Required = true })" Type="ColumnType.Number" Width="120"></GridColumn>
        <GridColumn Field=@nameof(Order.CustomerID) HeaderText="Customer Name" ValidationRules="@(new ValidationRules{ Required=true})" Width="120"></GridColumn>
        <GridColumn Field=@nameof(Order.OrderDate) HeaderText=" Order Date" EditType="EditType.DatePickerEdit" Format="d" TextAlign="TextAlign.Right" Width="130" Type="ColumnType.Date"></GridColumn>
        <GridColumn Field=@nameof(Order.Freight) HeaderText="Freight" Format="C2" TextAlign="TextAlign.Right" EditType="EditType.NumericEdit" Width="120"></GridColumn>
        <GridColumn Field=@nameof(Order.ShipCountry) HeaderText="Ship Country" EditType="EditType.DropDownEdit" Width="150"></GridColumn>
    </GridColumns>
</SfGrid>

@code {
    SfGrid<Order> Grid;
    public List<Order> Orders { get; set; }
    public bool Disabled { get; set; } = true;

    protected override void OnInitialized()
    {
        Orders = Enumerable.Range(1, 75).Select(x => new Order()
            {
                OrderID = 1000 + x,
                CustomerID = (new string[] { "ALFKI", "ANANTR", "ANTON", "BLONP", "BOLID" })[new Random().Next(5)],
                Freight = 2.1 * x,
                OrderDate = DateTime.Now.AddDays(-x),
                ShipCountry = (new string[] { "USA", "UK", "CHINA", "RUSSIA", "INDIA" })[new Random().Next(5)]
            }).ToList();
    }

    public class Order
    {
        public int? OrderID { get; set; }
        public string CustomerID { get; set; }
        public DateTime? OrderDate { get; set; }
        public double? Freight { get; set; }
        public string ShipCountry { get; set; }
    }

    public void Save()
    {
        Disabled = true;
        Grid.EndEdit();
    }

    public void Add()
    {
        Grid.AddRecord();
    }
    public void Delete()
    {
        Grid.DeleteRecord();
    }
    public async Task CellSaveHandler(CellSaveArgs<Order> args)
    {
        var batchChanges = await Grid.GetBatchChanges();
        if (batchChanges.ChangedRecords.Count() > 0)
        {
            Disabled = false;
        }
    }
    public void BatchAddHandler(BeforeBatchAddArgs<Order> args)
    {
        Disabled = false;
    }
    public void BatchDeleteHandler(BeforeBatchDeleteArgs<Order> args)
    {
        Disabled = false;
    }
}