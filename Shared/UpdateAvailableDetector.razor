@*https://techcommunity.microsoft.com/t5/web-development/blazor-wasm-pwa-applications-updates-cache-busting-with/m-p/3920976*@

@* Explains the work above well *@
@* https://whuysentruit.medium.com/blazor-wasm-pwa-adding-a-new-update-available-notification-d9f65c4ad13 *@

@* @page "/UpdateAvailableDetector" *@
@inject IJSRuntime _jsRuntime
@inject NavigationManager uriHelper

<style>
    /*Mud Overlay Height*/
    .mud-overlay .mud-overlay-scrim.mud-overlay-dark {
        height: 2000px;
        border-color: var(--mud-palette-overlay-dark);
        background-color: var(--mud-palette-overlay-dark);
    }

    u {
        text-decoration: underline;
        text-decoration-color: green;
    }

    u:hover {
        background-color: goldenrod;
        color: ghostwhite;
    }
</style>


@*Code to automatically clear cache and update system*@

@if (showUpdateNotification)
{
    <div style="position: fixed; bottom: 0; left: 0; width: 100%; background-color: #ffffff; padding: 10px; text-align: center;">
        <p>A new version of the app is available!</p>
        <button @onclick="RefreshApp">Refresh</button>
    </div>
}


<!-- UpdateNotification.razor -->
@code {
    bool showUpdateNotification = false;

    protected override async Task OnInitializedAsync()
    {
        // if (await _jsRuntime.InvokeAsync<bool>("navigator.serviceWorker.controller != null"))
        // {
        //     showUpdateNotification = true;
        //     StateHasChanged(); // Notify Blazor to update UI
        // }
    }

    async Task RefreshApp()
    {
        // Refresh the page to activate the new service worker
        await _jsRuntime.InvokeVoidAsync("window.location.reload");
    }
}
