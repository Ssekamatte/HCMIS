@inherits LayoutComponentBase;
@using HCMIS.Interface;
@using HCMIS.Model;
@using HCMIS.SHARED.Data;
@inject AppState AppState;
@inject SystemSettings _SystemSettings;
@inject NavigationManager Navigation;
@inject ILocalStorageService localStore;
@inject IJSRuntime JsRuntime;
@inject IAuthenticationService IAuthService;

<AuthorizeView>
    <Authorized>
        @if(user != null)
        {
            <h9 style="color:darkblue"><a>Welcome: @user.AccountHolderName</a></h9>
        <SfButton IconCss="e-danger" OnClick="@signOutClick">Log Out</SfButton>
        }
        @*<a href="Identity/Account/Manage">Hello, @context.User.Identity.Name!</a>*@
        
    </Authorized>
    <NotAuthorized>
        @*<a href="Identity/Account/Register">Register</a>
        <a href="Identity/Account/Login">Log in</a>*@
    </NotAuthorized>
</AuthorizeView>
@code{
    LoginResultModel user { get; set; }
    protected override async Task OnInitializedAsync()
    {
        // 
        user = await IAuthService.GetUserCredentials();
    }

    private async void signOutClick()
    {
          await localStore.ClearAsync();
          AppState.LoggedIn = false;
          Navigation.NavigateTo("/");

        //IAuthService.Logout();
        //Navigation.NavigateTo("/");
    }
}