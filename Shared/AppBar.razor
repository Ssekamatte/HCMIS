@using HCMIS.Interface;
@inject IAuthenticationService IAuthService;
@inject NavigationManager Navigation;

<MudAppBar Elevation="3">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="MudBlazor.Color.Inherit" Edge="Edge.Start"
                   OnClick="async () => await OnSidebarToggled.InvokeAsync()" />
    <MudSpacer/>
    <MudButton Variant="Variant.Filled" StartIcon="fa fa-sign-out" Color="Color.Error" OnClick="LogOut">LOG OUT</MudButton>
</MudAppBar>

@code {
    private bool _isLightMode = true;
    private MudTheme _currentTheme = new MudTheme();
    [Parameter]
    public EventCallback OnSidebarToggled { get; set; }
    [Parameter]
    public EventCallback OnLogoutToggled { get; set; }
    [Parameter]
    public EventCallback<MudTheme> OnThemeToggled { get; set; }
    private async Task ToggleTheme()
    {
        _isLightMode = !_isLightMode;
        _currentTheme = !_isLightMode ? GenerateDarkTheme() : new MudTheme();
        await OnThemeToggled.InvokeAsync(_currentTheme);
    }
    private MudTheme GenerateDarkTheme() =>
        new MudTheme
        {
            Palette = new Palette()
            {
                Black = "#27272f",
                Background = "#32333d",
                BackgroundGrey = "#27272f",
                Surface = "#373740",
                TextPrimary = "#ffffffb3",
                TextSecondary = "rgba(255,255,255, 0.50)",
                AppbarBackground = "#27272f",
                AppbarText = "#ffffffb3",
                DrawerBackground = "#27272f",
                DrawerText = "#ffffffb3",
                DrawerIcon = "#ffffffb3"
            }
        };

    private async Task LogOut()
    {
        await IAuthService.Logout();
        Navigation.NavigateTo("/");
    }

    private async Task Log(MenuEventArgs<MenuItem> args)
    {
        //Selected menu item
        if (args.Item.Id == "LogOutButton")
        {
            //await localStore.ClearAsync();
            //AppState.LoggedIn = false;
            IAuthService.Logout();
            Navigation.NavigateTo("/");
        }
    }
}
