@inherits LayoutComponentBase;
@inject IJSRuntime JsRuntime;
<style>
    .mud-container {
    padding-left: 2px;
    padding-right: 2px;
    }

    .blazored-toast-container[b-y65zu6vhcs] {
        z-index: 414748364800;
    }
    #btn {
        display: none;
        /*display: block;*/
        position: fixed;
        bottom: 20px;
        right: 30px;
        z-index: 10000; /*99*/
        font-size: 18px;
        border: none;
        outline: none;
        background-color: red;
        color: white;
        cursor: pointer;
        padding: 15px;
        border-radius: 4px;
    }

        #btn:hover {
            background-color: #555;
        }

    .control-container .e-btn.e-inherit {
        margin: 0 3px;
        /*width: 100%;*/
    }

    .content {
        padding-top: 1.1rem;
    }

    .logo-style {
        padding: 2px;
    }

    /*Change Font */
    .e-menu-wrapper .e-menu .e-menu-item .e-menu-url, .e-menu-container .e-menu .e-menu-item .e-menu-url {
        color: ghostwhite;
    }
</style>

<style>
    /*.pt-16, .py-16 {
                padding-top: 0px !important;
            }*/

    .pr-16, .px-16 {
        padding-right: 2px !important;
    }

    .pl-16, .px-16 {
        padding-left: 2px !important;
    }

    svg.mud-icon-root.mud-icon-default.mud-svg-icon.mud-icon-size-medium.mud-nav-link-icon.mud-nav-link-icon-default {
        font-size: 0.8rem;
    }

    span.mud-icon-root.mud-icon-default.mud-icon-size-medium.mud-nav-link-icon.mud-nav-link-icon-default {
        font-size: 0.8rem;
    }
</style>

<AuthorizeView>
    <Authorized>
        <MudLayout>
            <AppBar OnSidebarToggled="ToggleSidebar" OnThemeToggled="ToggleTheme" />
            @*@if(_sidebarOpen== true)
            {
                <NavMenu SideBarOpen="@_sidebarOpen" />
            }*@
            <NavMenu SideBarOpen="@_sidebarOpen" />
            <MudMainContent Class="pt-16 px-16">
                <MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">

                    <BlazoredToasts Position="Blazored.Toast.Configuration.ToastPosition.TopRight"
                                    Timeout="60000"
                                    IconType="Blazored.Toast.Configuration.IconType.FontAwesome"
                                    SuccessClass="success-toast-override"
                                    SuccessIcon="fa fa-check"
                                    ErrorIcon="fa fa-times"
                                    InfoIcon="fa fa-info"
                                    WarningIcon="fa fa-warning" />
                    @Body
                </MudContainer>
            </MudMainContent>
        </MudLayout>
    </Authorized>
    <NotAuthorized>
        <BlazoredToasts Position="Blazored.Toast.Configuration.ToastPosition.TopRight"
                        Timeout="10"
                        IconType="Blazored.Toast.Configuration.IconType.FontAwesome"
                        SuccessClass="success-toast-override"
                        SuccessIcon="fa fa-check"
                        ErrorIcon="fa fa-times"
                        InfoIcon="fa fa-info"
                        WarningIcon="fa fa-warning" />
        @Body
    </NotAuthorized>
</AuthorizeView>

<div class="row">
    <div class="col-lg-12 control-section">
        <button onclick="topFunction()" @ref="ScrollToTop" id="btn" title="Go to top">Scroll To Top</button>
    </div>
</div>
<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

@code {
    private Boolean disable = true;
    public ElementReference ScrollToTop;

    Dictionary<string, object> HtmlAttribute = new Dictionary<string, object>()
    {
    {"class", "sidebar-treeview" }
    };
    Dictionary<string, object> MenuHtmlAttribute = new Dictionary<string, object>()
    {
    {"style", "z-index: 100;" }
    };
    Dictionary<string, object> LogoutHtmlAttribute = new Dictionary<string, object>()
    {
    {"class", "Menu-logout" },{"style","float:right;"}
    };

    private MudTheme _currentTheme = new MudTheme();
    private bool _sidebarOpen = false;


    private void ToggleTheme(MudTheme changedTheme) => _currentTheme = changedTheme;

    private void ToggleSidebar() => _sidebarOpen = !_sidebarOpen;

    private async void OnButtonClick()
    {
        await JsRuntime.InvokeVoidAsync("OnScrollEvent");
    }
}